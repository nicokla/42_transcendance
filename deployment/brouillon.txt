
summary
1) nginx proxy
2) heroku
3) aws + docker compose ?

------------

1) nginx proxy

https://gorails.com/episodes/deploy-actioncable-and-rails-5.amp

https://gist.github.com/dashedstripes/59429522c17019abaa0c40f80041fb5c

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	root /usr/share/nginx/html;
	index index.html index.htm;

	server_name localhost;

	location / {
		proxy_pass http://127.0.0.1:3000/;
		proxy_set_header        Host              $http_host;
	}

	location /cable {
		proxy_pass http://127.0.0.1:3000/cable;
		proxy_http_version 1.1;
     		proxy_set_header Upgrade $http_upgrade;
     		proxy_set_header Connection "upgrade";
	}
}


----------------------------

2) heroku

https://devcenter.heroku.com/articles/getting-started-with-rails6

heroku create
git push heroku master
heroku run rake db:migrate
heroku ps:scale web=1
heroku apps:rename nouveauNom
heroku addons:create redistogo
heroku open
heroku logs --tail


https://devcenter.heroku.com/articles/redistogo#using-with-rails-2-3-3



--------------

2) heroku suite

https://youtu.be/EyGI3u2X8UM

https://devcenter.heroku.com/articles/heroku-redis

https://devcenter.heroku.com/articles/redistogo#using-with-rails-2-3-3

https://blog.heroku.com/real_time_rails_implementing_websockets_in_rails_5_with_action_cable#deploying-our-application-to-heroku

config/cable.yml
https://github.com/ziraqyoung/rails-realtime-chatapp/blob/master/config/cable.yml
production:
  adapter: redis
  # url: <%= ENV.fetch("REDIS_URL") { "redis://localhost:6379/1" } %>
  url: <%= ENV["REDISTOGO_URL"] %>
  channel_prefix: rails_chat_tutorial_production

config/environments/production.rb
https://github.com/ziraqyoung/rails-realtime-chatapp/blob/master/config/environments/production.rb
  config.web_socket_server_url =
    'wss://rails-realtime-chatapp.herokuapp.com/cable'
  config.action_cable.allowed_request_origins = %w[
    https://rails-realtime-chatapp.herokuapp.com
    http://rails-realtime-chatapp.herokuapp.com
  ]


---------------------------

3) aws ec2 + docker compose


https://youtu.be/jAgElwaheXo


chmod 400 ~/Desktop/examplekeypair.pem
ssh -i ~/Desktop/examplekeypair.pem ec2-user@35.175.134.202
sudo yum update
sudo yum install git-all
git clone ...
sudo yum install docker
sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo usermod -aG docker $USER
sudo service docker start
sudo chown $USER /var/run/docker.sock

-----------

2) aws ec2 suite

https://medium.com/@matayoshi.mariano/dockerize-and-deploy-to-aws-ec2-9208068fb92b
https://www.codewithjason.com/install-nginx-passenger-ec2-instance-rails-hosting/
https://itnext.io/docker-rails-puma-nginx-postgres-999cd8866b18
https://nickjanetakis.com/blog/dockerize-a-rails-5-postgres-redis-sidekiq-action-cable-app-with-docker-compose


